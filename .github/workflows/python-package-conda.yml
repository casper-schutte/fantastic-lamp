name: simple-test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master ]

jobs:
  run-script:
    runs-on: ubuntu-20.04
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Add conda to system path
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
          
      
      - name: Restore conda cache
        uses: actions/cache@v2
        with:
          path: $CONDA/pkgs
          key: ubuntu-20.04-conda-${{ hashFiles('**/environment.yaml') }}
          restore-keys: |
            ubuntu-20.04-conda-${{ hashFiles('**/environment.yaml') }}
            
      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: $HOME/.cache/pip
          key: ubuntu-20.04-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ubuntu-20.04-pip-${{ hashFiles('**/requirements.txt') }}
      
      - name: Install dependencies
        run: |
          conda env update --file environment.yaml --name base
          pip install -r requirements.txt
          pip freeze > requirements.txt
          
      - name: Cache conda and pip packages
        uses: actions/cache@v2
        with:
          path: $CONDA/pkgs
          key: ${{ runner.os }}-conda-${{ hashFiles('**/environment.yaml') }}
          restore-keys: |
            ubuntu-20.04-conda-${{ hashFiles('**/environment.yaml') }}

      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: $HOME/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
             ubuntu-20.04-pip-${{ hashFiles('**/requirements.txt') }}


      - name: cd
        run: cd Test
        shell: bash

      - uses: actions/checkout@v3
      - name: test script
        run: |
          nice bash find_coverage_test.sh
        shell: bash
        working-directory: Test
        
        
